import React from "react";
import {
  Image,
  Header,
  Container,
  Divider,
  Icon,
  Grid,
  Segment
} from "semantic-ui-react";
import NavBar from "../components/NavBar";
import Footer from "../components/Footer";

const About = () => (
  <div>
    <NavBar active="about" fixed={true} />
    <div style={{ padding: "6em 0" }}>
      <Container textAlign="center">
        <Header style={{ color: "#2b5fa7" }} as="h1" textAlign="left">
          HOW IT WORKS
        </Header>
        <Divider hidden />
        <Container>
          <Grid textAlign="justified">
            <Grid.Row>
              <Grid.Column width={3} />
              <Grid.Column width={10}>
                <Image rounded centered src="/static/images/Diagram.png" />
              </Grid.Column>
            </Grid.Row>
            <Grid.Row>
              <Grid.Column width={2} />
              <Grid.Column width={12}>
                <Header>Ideas Behind The Scene</Header>
                <p>
                  {`Blockchain is added in EtherFund in between Client and
                    Server, as a single source of truth.`}
                </p>
                <p>
                  {`Compared to the traditional Client-Server model, EtherFund
                    added Blockchain as a middleman, who is responsible for
                    provide only truthy data to both client and server.`}
                </p>
                <p>
                  {`For Users, client communicates with blockchain directly
                    through API to get user specific info. This is similiar to any API application.`}
                </p>
                <p>
                  {`The main difference is on the server side. With Blockchain, clients don't send the all the data to server any more. Instead, Clients just let Server know there is a new block generated by user's request. Then server syncs with Blockchain directly to figure out what has been updated. Then update the database and send the info back to client to update the view.`}
                </p>
                <p>
                  {`In this way, the application can prevent from any client attack to manipulate the database and keep both client and server to deliver the always true info.`}
                </p>
                <Header>How to test this application?</Header>
                <Segment.Group>
                  <Segment>
                    <Header as="h4">1. Add a Blockchain Interface</Header>
                    <p>
                      Add MetaMask Chrome extension for accessing Ethereum
                      enabled distributed application. Here is chrome extension
                      link:{" "}
                      <a
                        target="_blank"
                        rel="noopener noreferrer"
                        href="https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en"
                      >
                        LINK
                      </a>
                    </p>
                    <p>
                      Here is an intro about MetaMask from ConsenSys:{" "}
                      <a
                        target="_blank"
                        rel="noopener noreferrer"
                        href="https://media.consensys.net/metamask-brings-ethereum-to-your-browser-a327f87c47ce"
                      >
                        MetaMask Brings Ethereum to Your Browser
                      </a>
                    </p>
                  </Segment>
                  <Segment>
                    <Header as="h4">2. Connect to test network</Header>
                    <p>
                      For testing purpose, EtherFund Server is connected to a
                      private blockchain. It is a homemade Blockchain using
                      Ganache-cli.
                    </p>
                    <p>
                      In MetaMask, setup Custom RPC with the following URL
                      address:
                    </p>
                    <strong>https://open-private.herokuapp.com/</strong>
                  </Segment>
                  <Segment>Middle</Segment>
                  <Segment>Bottom</Segment>
                </Segment.Group>
              </Grid.Column>
            </Grid.Row>
          </Grid>
        </Container>
        <Divider section hidden />
        <Header style={{ color: "#2b5fa7" }} as="h1" textAlign="left">
          ABOUT ME
        </Header>
        <Header as="h2" textAlign="left">
          <Image
            circular
            src="https://avatars0.githubusercontent.com/u/9433422?s=460&v=4"
          />{" "}
          Chen Li
          <Header.Subheader style={{ padding: "1em 0" }}>
            A Full-Stack Engineer - Javascript, NodeJS, React/Redux, Blockchain
          </Header.Subheader>
        </Header>
        <Grid columns={10}>
          <Grid.Row>
            <Grid.Column>
              <Header as="h2" icon>
                <a
                  className="ic"
                  href="https://github.com/lichen777"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon name="github square" />
                </a>
              </Header>
            </Grid.Column>
            <Grid.Column>
              <Header as="h2" icon>
                <a
                  className="ic"
                  href="https://www.linkedin.com/in/chenli777/"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon name="linkedin square" />
                </a>
              </Header>
            </Grid.Column>
            <Grid.Column>
              <Header as="h2" icon>
                <a className="ic" href="mailto:lchen139@gmail.com">
                  <Icon name="mail square" />
                </a>
              </Header>
            </Grid.Column>
          </Grid.Row>
        </Grid>
      </Container>
    </div>
    <Footer fixed={false} />
  </div>
);

export default About;
